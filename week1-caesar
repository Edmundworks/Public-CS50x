#include <cs50.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>

//012345678910111213141516171819202122232425
//ABCDEFGHIJK L M N O P Q R S T U V W X Y Z
// Tidy up exiting with return and usage. Make a function for return + printing usage?
// Can I create some term that replaces having to type out plain[j] + (converted % 26) every time?

int main(int argc, string argv[])
// Get key from user    
{
    if (argc == 2)
    {
        for (int i = 0; i <strlen(argv[1]); i++)
        {
            if (isdigit(argv[1][i]))
            {}    
            else
            {
                printf("Usage ./caesar key\n");
                return 1;
            }    
        }
    }
    else
    {
        printf("Usage ./caesar key\n");
        return 1;
    }
// Make key a number    
    int converted = atoi(argv[1]);
// Get plaintext from user    
    string plain = get_string("plaintext: ");
    printf("ciphertext: ");
// Convert plaintext to ciphertext    
    for (int j = 0; j < strlen(plain); j++)
    if (plain[j] < 65 || (plain[j] > 90 && plain[j] < 97) || plain[j] > 122)
    {
    printf("%c", plain[j]);    
    }
    else
    {    
       {
        if (plain[j] + (converted % 26) > 122 ||
            (plain[j] + (converted % 26) > 90 && plain[j] + (converted % 26) < 97))
           {
             plain[j] = ((plain[j] + (converted % 26)) - 26); 
           }
       else
           {    
           plain[j] = plain[j] + (converted % 26);
           }
    }
    
       printf("%c", plain[j]); 
    }
    printf("\n");
    }
